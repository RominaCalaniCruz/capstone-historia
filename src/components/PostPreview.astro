---
import { type CollectionEntry } from 'astro:content';
import ArrowRight from '../icons/ArrowRight.astro';
import FormattedDate from './FormattedDate.astro';
import { Image, Picture } from 'astro:assets';
import { getFormattedDate } from '@/utils/all';

type Props = { post: CollectionEntry<'blog'>; class?: string; headingLevel?: 'h2' | 'h3' };

const { post, class: className, headingLevel = 'h2' } = Astro.props;
const { title, publishDate, updatedDate, excerpt } = post.data;
const TitleTag = headingLevel;
---

<a class:list={['flex justify-between items-start gap-2', className]} href={`/blog/${post.id}/`}>
    <div class="relative overflow-hidden transition-all bg-transparent border-2 p-2 dark:border-gray-600 rounded-md dark:bg-gray-900 hover:scale-105">
        {
            post.data.image ? (
                <img src={post.data.image} width="800" height="450" sizes="(max-width: 640px) 90vw, 480px" alt="Thumbnail" class="rounded-md mb-2" />
            ) : (
                <span class="absolute w-16 h-16 text-gray-200 -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" />
            )
        }
        <TitleTag
            class="text-2xl leading-tight font-serif font-bold bg-gradient-to-r from-green-200 to-green-100 dark:from-purple-800 dark:to-purple-900 bg-[length:0px_10px] bg-left-bottom bg-no-repeat transition-[background-size] duration-500 hover:bg-[length:100%_3px] group-hover:bg-[length:100%_10px]"
        >
            {title}
        </TitleTag>
        <!-- <h2 class="mt-0 text-lg font-semibold tracking-normal dark:text-white">
            <a href={'/blog/' + post.id}>
                <span
                    class="bg-gradient-to-r from-green-200 to-green-100 dark:from-purple-800 dark:to-purple-900 bg-[length:0px_10px] bg-left-bottom bg-no-repeat transition-[background-size] duration-500 hover:bg-[length:100%_3px] group-hover:bg-[length:100%_10px]"
                >
                    {post.data.title}
                </span>
            </a>
        </h2> -->
        <!-- <div class="mt-1 text-sm leading-normal">
            <FormattedDate date={publishDate} />
            {
                updatedDate && (
                    <>
                        {' '}
                        <span>
                            (Updated on <FormattedDate date={updatedDate} />)
                        </span>
                    </>
                )
            }
        </div> -->
        <div class="flex items-center mt-3 space-x-3 justify-evenly text-gray-500 dark:text-gray-400">
            <div class="flex items-center gap-3">
                <!-- <div class="relative flex-shrink-0 w-5 h-5">
                    {
                        post.data.author?.photo && (
                            <Image src={post.data.author?.photo} alt="Author Photo" width={40} height={40} loading="lazy" class="rounded-full" />
                        )
                    }
                </div>
                <span class="text-sm">{post.data.author?.name}</span> -->
                <div class="flex items-center gap-3">
                    {
                        post.data.authors.map((author) => (
                            <div class="flex items-center gap-2">
                                {author.photo && (
                                    <img src={author.photo} alt={`Foto de ${author.name}`} width={40} height={40} loading="lazy" class="rounded-full" />
                                )}
                                <span class="text-sm">{author.name}</span>
                            </div>
                        ))
                    }
                </div>
            </div>
            <span class="text-xs text-gray-300 dark:text-gray-600"> &bull;</span>
            <!-- <FormattedDate date={publishDate} />
            {
                updatedDate && (
                    <>
                        {' '}
                        <span>
                            (Updated on <FormattedDate date={updatedDate} />)
                        </span>
                    </>
                )
            } -->
            <time class="text-sm" datetime={publishDate}>
                {getFormattedDate(publishDate)}
            </time>
        </div>
        {excerpt && <div class="mt-3 text-sm text-gray-700 dark:text-gray-400 leading-normal">{excerpt}</div>}
    </div>
    <!-- <div class="font-serif italic opacity-0 transition sm:inline-flex sm:gap-1 sm:items-center sm:shrink-0">
        Leer art√≠culo <ArrowRight class="fill-current w-4 h-4" />
    </div> -->
</a>
